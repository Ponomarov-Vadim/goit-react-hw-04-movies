{"version":3,"sources":["services/api.js","components/common/MoviesList/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","pages/MoviesPage/index.jsx"],"names":["BASE_URL","API_KEY","fetch","type","query","axios","get","MoviesList","movies","map","id","name","title","key","to","undefined","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","MoviesPage","state","handleSubmit","e","history","props","preventDefault","push","location","pathname","then","data","setState","results","handleChange","target","this","onSubmit","onChange","Component"],"mappings":"uGAAA,qBAEMA,EAAW,gCACXC,EAAU,mCAUDC,IARD,WAA8C,IAA7CC,EAA4C,uDAArC,qBAAsBC,EAAe,uDAAP,GAClD,OAAOC,IAAMC,IAAN,UACFN,GADE,OACSG,EADT,oBACyBF,GADzB,OAEO,KAAVG,EAAe,UAAYA,EAAQ,O,gCCRzC,2BAceG,IAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjB,4BACGA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACV,wBAAIC,IAAKH,GACP,kBAAC,IAAD,CAAMI,GAAE,kBAAaJ,SAAgBK,IAATJ,EAAqBA,EAAOC,U,gCCRjD,SAASI,EAAgBC,EAAKJ,EAAKK,GAYhD,OAXIL,KAAOI,EACTE,OAAOC,eAAeH,EAAKJ,EAAK,CAC9BK,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIJ,GAAOK,EAGND,E,mHCRYO,E,4MACnBC,MAAQ,CACNrB,MAAO,GACPI,OAAQ,I,EAcVkB,aAAe,SAACC,GAAO,IACbC,EAAY,EAAKC,MAAjBD,QACAxB,EAAU,EAAKqB,MAAfrB,MAERuB,EAAEG,iBACFF,EAAQG,KAAR,UAAgBH,EAAQI,SAASC,SAAjC,kBAAmD7B,GAAS,EAAKqB,OAEjEvB,YAAM,eAAgBE,GAAO8B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAChC,EAAKC,SAAS,CAAE5B,OAAQ2B,EAAKE,c,EAIjCC,aAAe,oBAAGC,OAAU5B,EAAb,EAAaA,KAAMO,EAAnB,EAAmBA,MAAnB,OACb,EAAKkB,SAAL,KAAiBzB,EAAOO,K,kEAxBL,IAAD,OACVO,EAAUe,KAAKX,MAAMG,SAArBP,MAGJA,GACFvB,YAAM,eAAgBuB,EAAMrB,OAAO8B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACtC,EAAKC,SAAS,CAAE5B,OAAQ2B,EAAKE,e,+BAoBzB,IAAD,EACmBG,KAAKf,MAAvBrB,EADD,EACCA,MAAOI,EADR,EACQA,OAEf,OACE,oCACE,0BAAMiC,SAAUD,KAAKd,cACnB,2BACEvB,KAAK,OACLQ,KAAK,QACLO,MAAOd,EACPsC,SAAUF,KAAKF,eAEjB,4BAAQnC,KAAK,UAAb,WAEF,kBAACI,EAAA,EAAD,CAAYC,OAAQA,S,GA9CYmC","file":"static/js/6.abece9ee.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = \"c568eb497a154e87132efaa568a83ee9\";\r\n\r\nconst fetch = (type = \"trending/movie/day\", query = \"\") => {\r\n  return axios.get(\r\n    `${BASE_URL}${type}?api_key=${API_KEY}${\r\n      query !== \"\" ? \"&query=\" + query : \"\"\r\n    }`\r\n  );\r\n};\r\n\r\nexport default fetch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoviesList = ({ movies }) => (\r\n  <ul>\r\n    {movies.map(({ id, name, title }) => (\r\n      <li key={id}>\r\n        <Link to={`/movies/${id}`}>{name !== undefined ? name : title}</Link>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default MoviesList;\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      title: PropTypes.string,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from \"react\";\r\nimport fetch from \"../../services/api\";\r\nimport MoviesList from \"../../components/common/MoviesList\";\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { state } = this.props.location;\r\n    // console.log(state); // what wrong?\r\n\r\n    if (state) {\r\n      fetch(\"search/movie\", state.query).then(({ data }) =>\r\n        this.setState({ movies: data.results })\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const { history } = this.props;\r\n    const { query } = this.state;\r\n\r\n    e.preventDefault();\r\n    history.push(`${history.location.pathname}?query=${query}`, this.state);\r\n\r\n    fetch(\"search/movie\", query).then(({ data }) =>\r\n      this.setState({ movies: data.results })\r\n    );\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) =>\r\n    this.setState({ [name]: value });\r\n\r\n  render() {\r\n    const { query, movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={query}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        <MoviesList movies={movies} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}